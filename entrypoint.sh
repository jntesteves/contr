#!/bin/sh
# SPDX-License-Identifier: Unlicense
# entrypoint - contr
#
# This file is part of contr. Do not edit this file. Use the profile
# file to setup your custom environment.
#
SCRIPT_NAME="$(basename "$(realpath "$0")")"

log_error() { printf '%s\n' "$*" >&2; }
log_info() { printf '%s\n' "$*"; }
log_debug() { [ "$CONTR_DEBUG" ] && printf '%s\n' "DEBUG entrypoint $*"; }
abort() {
    log_error "Error on entrypoint script: $*"
    exit 1
}

[ ! -f /run/.containerenv ] && [ ! -f /.dockerenv ] &&
    abort "It seems we are not in a container. $SCRIPT_NAME is meant to run inside a container."

export PS1="[ðŸ“¦ ${CONTR_IMAGE:-contr} \W]\\$ "
# Substitute PS1= with __PS1= in these files so our value is not overwritten
# Needed for Debian- and Ubuntu-based images
[ -w /etc/bash.bashrc ] && sed -Ei '/^\s*PS1=/s/PS1=/__&/' /etc/bash.bashrc /etc/profile /root/.bashrc /root/.profile

# Link to files in /root from HOME
for file in /root/.* /root/*; do
    [ "$file" != "/root/." ] && [ "$file" != "/root/.." ] && [ "$file" != "/root/*" ] &&
        ln -s "$file" "$HOME" &&
        log_debug "ln file=$file"
done

# If HOME is in /var/home or similar, add a link to it in /home
case "$HOME" in
    /*/home/*)
        mkdir -p /home
        ln -s "$HOME" "/home/$(basename "$HOME")"
        ;;
esac

# shellcheck source=/dev/null
[ -f "$CONTR_PROFILE_1" ] && . "$CONTR_PROFILE_1" && log_debug "sourced CONTR_PROFILE_1=$CONTR_PROFILE_1"
# shellcheck source=/dev/null
[ -f "$CONTR_PROFILE_2" ] && . "$CONTR_PROFILE_2" && log_debug "sourced CONTR_PROFILE_2=$CONTR_PROFILE_2"

log_debug "\$*=$*"
if command -v "$1" >/dev/null; then
    log_debug "\$1='$1' executable"
    exec "$@"
else
    log_debug "\$1='$1' non-executable"
    [ -x "$SHELL" ] && log_debug "SHELL=$SHELL executable"
    [ ! -x "$SHELL" ] && log_debug "SHELL=$SHELL non-executable"
    [ ! -x "$SHELL" ] && [ -x /bin/bash ] && SHELL=/bin/bash
    [ ! -x "$SHELL" ] && [ -x /bin/sh ] && SHELL=/bin/sh
    [ ! -x "$SHELL" ] && abort "SHELL=$SHELL not executable. Could not find an executable shell"
    log_debug "SHELL=$SHELL"
    exec $SHELL
fi
